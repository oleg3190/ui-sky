{"version":3,"sources":["webpack://WaveUI/./src/documentation/views/ui-components/menu/api.vue?163b","webpack://WaveUI/src/documentation/views/ui-components/menu/api.vue","webpack://WaveUI/./src/documentation/views/ui-components/menu/api.vue?a442","webpack://WaveUI/./src/documentation/views/ui-components/menu/api.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","props","propsDescs","slots","events","staticRenderFns","value","showOnHover","hideOnMenuClick","color","bgColor","shadow","custom","tile","round","noBorder","transition","menuClass","titleClass","contentClass","detachTo","fixed","top","bottom","left","right","alignTop","alignBottom","alignLeft","alignRight","zIndex","minWidth","overlay","persistent","activator","title","default","actions","input","close","open","data","computed","component"],"mappings":"iIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,KAAK,CAACP,EAAIQ,GAAG,SAASJ,EAAG,gBAAgB,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIS,MAAM,aAAeT,EAAIU,WAAW,MAAQ,WAAWN,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIW,MAAM,MAAQ,WAAWP,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIY,OAAO,MAAQ,aAAa,IAC1cC,EAAkB,G,wBCctB,GACEC,MAAO,gMACPC,YAAa,iIACbC,gBAAiB,8GACjBC,MAAO,0QACPC,QAAS,gRACTC,OAAQ,6CACRC,OAAQ,gIACRC,KAAM,sEACNC,MAAO,mFACPC,SAAU,oDACVC,WAAY,qQACZC,UAAW,kDACXC,WAAY,mIACZC,aAAc,qIACdC,SAAU,sTACVC,MAAO,iFACPC,IAAK,qIACLC,OAAQ,2IACRC,KAAM,uIACNC,MAAO,yIACPC,SAAU,4DACVC,YAAa,kEACbC,UAAW,wEACXC,WAAY,0EACZC,OAAQ,gEACRC,SAAU,wKACVC,QAAS,sDACTC,WAAY,2EAGd,GACEC,UAAW,CAAb,8MACEC,MAAO,CAAT,kMACEC,QAAS,CAAX,iCACEC,QAAS,CAAX,4MAGA,GACEC,MAAO,yIACP,oBAAqB,uIACrBC,MAAO,yBACPC,KAAM,yBAGR,GACEC,KAAM,WAAR,OACA,aACA,UAGEC,SAAU,CAGRzC,MAHJ,WAIM,OAAO,EAAb,YAEIG,OANJ,WAOM,OAAO,EAAb,iFCzE0X,I,YCOtXuC,EAAY,eACd,EACApD,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAAsC,E","file":"js/menu-api-vue.1af7d2cb.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\"}},[_vm._v(\"API\")]),_c('component-api',{staticClass:\"mt0\",attrs:{\"items\":_vm.props,\"descriptions\":_vm.propsDescs,\"title\":\"Props\"}}),_c('component-api',{attrs:{\"items\":_vm.slots,\"title\":\"Slots\"}}),_c('component-api',{attrs:{\"items\":_vm.events,\"title\":\"Events\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\r\ndiv\r\n  .w-divider.my12\r\n  title-link.title1(h2) API\r\n\r\n  component-api.mt0(:items=\"props\" :descriptions=\"propsDescs\" title=\"Props\")\r\n\r\n  component-api(:items=\"slots\" title=\"Slots\")\r\n\r\n  component-api(:items=\"events\" title=\"Events\")\r\n</template>\r\n\r\n<script>\r\nimport WMenu from '@/wave-ui/components/w-menu'\r\n\r\nconst propsDescs = {\r\n  value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>This prop controls the visibility of the menu. Any truthy value will show the menu whereas any falsy value will hide it.',\r\n  showOnHover: 'Triggers the menu apparition on activator hover instead of click by default. A mouseleave on the activator will hide the menu.',\r\n  hideOnMenuClick: 'Hides the menu when a click is made inside the menu. For instance when selecting a list item inside a menu.',\r\n  color: 'Applies a color to the menu\\'s text. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\r\n  bgColor: 'Applies a color to the menu\\'s background. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\r\n  shadow: 'Applies a drop shadow to the menu element.',\r\n  custom: 'By default, the menu layout is a <span class=\"code\">w-card</span>. To have more flexibility, you can set this option to true.',\r\n  tile: 'Removes the default border-radius and sets sharp edges on the menu.',\r\n  round: 'Sets a maximum border-radius on the corners of the menu, giving it a round look.',\r\n  noBorder: 'Removes the default border from the menu element.',\r\n  transition: 'Applies a particular transition to the menu element when showing and hiding.<br>Accepts all the transitions listed in the <a href=\"/transitions\">transitions</a> knowledge base page. You can also disable the transition by setting this prop to an empty string.',\r\n  menuClass: 'Applies a custom CSS class to the menu element.',\r\n  titleClass: 'Applies a custom CSS class to the menu\\'s title when using the default card layout (when not using the <code>custom</code> prop).',\r\n  contentClass: 'Applies a custom CSS class to the menu\\'s content when using the default card layout (when not using the <code>custom</code> prop).',\r\n  detachTo: 'Moves the menu element into another DOM element.<br>Accepts a valid query selector string. If the string is invalid, or the node is not found or if <code>true</code> is provided, `.w-app` will be the target.<br>By default a wrapper is created around the activator element and the menu is appended inside it.',\r\n  fixed: 'Sets the CSS position of the menu to <code>fixed</code> (absolute by default).',\r\n  top: 'Places the menu at the top of the screen when the <code>fixed</code> prop is set to true or at the top of its container otherwise.',\r\n  bottom: 'Places the menu at the bottom of the screen when the <code>fixed</code> prop is set to true or at the bottom of its container otherwise.',\r\n  left: 'Places the menu at the left of the screen when the <code>fixed</code> prop is set to true or at the left of its container otherwise.',\r\n  right: 'Places the menu at the right of the screen when the <code>fixed</code> prop is set to true or at the right of its container otherwise.',\r\n  alignTop: 'Aligns the top of the menu with the top of the activator.',\r\n  alignBottom: 'Aligns the bottom of the menu with the bottom of the activator.',\r\n  alignLeft: 'Aligns the left side of the menu with the left side of the activator.',\r\n  alignRight: 'Aligns the right side of the menu with the right side of the activator.',\r\n  zIndex: 'Applies a z-index (positive or negative integer) to the menu.',\r\n  minWidth: 'Sets a min-width on the menu.<br>Accepts a string made of a value and a unit (e.g. <code>2.5em</code>) or a number (e.g. <code>45</code>) that will be a pixel value.',\r\n  overlay: 'Displays a full screen overlay underneath the menu.',\r\n  persistent: 'When set to true, clicking outside of the menu will not close the menu.'\r\n}\r\n\r\nconst slots = {\r\n  activator: { description: '<strong>This slot is required and must have the v-on=\"on\" directive set on it for the menu to toggle correctly.</strong><br>The activator can be any visible DOM element or mounted component.' },\r\n  title: { description: 'By default (when <code>custom</code> is set to false), the menu uses a <span class=\"code\">w-card</span>. This slot allows a custom title for the <span class=\"code\">w-card</span>.' },\r\n  default: { description: 'The menu content.' },\r\n  actions: { description: 'By default (when <code>custom</code> is set to false), the menu uses a <span class=\"code\">w-card</span>. This slot allows setting the actions slot of the <span class=\"code\">w-card</span>.' }\r\n}\r\n\r\nconst eventsDescs = {\r\n  input: 'Emitted each time the state of the component changes (when opening or closing the menu).<br>Updates the v-model value in Vue 2.x only.',\r\n  'update:modelValue': 'Emitted each time the state of the component changes (when opening or closing the menu).<br>Updates the v-model value in Vue 3 only.',\r\n  close: 'Emitted on menu close.',\r\n  open: 'Emitted on menu open.'\r\n}\r\n\r\nexport default {\r\n  data: () => ({\r\n    propsDescs,\r\n    slots\r\n  }),\r\n\r\n  computed: {\r\n    // Reads all the props and events directly from the component, so that as soon as a new prop or event\r\n    // is added it will appear even if no description is yet provided.\r\n    props () {\r\n      return WMenu.props\r\n    },\r\n    events () {\r\n      return WMenu.emits.reduce((obj, label) => (obj[label] = { description: eventsDescs[label] || '' }) && obj, {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api.vue?vue&type=template&id=14bfcbb2&lang=pug&\"\nimport script from \"./api.vue?vue&type=script&lang=js&\"\nexport * from \"./api.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}