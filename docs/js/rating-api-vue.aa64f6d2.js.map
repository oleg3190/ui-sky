{"version":3,"sources":["webpack://WaveUI/./src/documentation/views/ui-components/rating/api.vue?b75d","webpack://WaveUI/src/documentation/views/ui-components/rating/api.vue","webpack://WaveUI/./src/documentation/views/ui-components/rating/api.vue?83bd","webpack://WaveUI/./src/documentation/views/ui-components/rating/api.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","props","propsDescs","slots","events","staticRenderFns","value","max","icon","color","bgColor","xs","sm","md","lg","xl","noRipple","name","disabled","readonly","required","validators","item","description","params","index","input","focus","blur","data","computed","component"],"mappings":"mIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,KAAK,CAACP,EAAIQ,GAAG,SAASJ,EAAG,gBAAgB,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIS,MAAM,aAAeT,EAAIU,WAAW,MAAQ,WAAWN,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIW,MAAM,MAAQ,WAAWP,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIY,OAAO,MAAQ,aAAa,IAC1cC,EAAkB,G,gDCetB,GACEC,MAAO,+KACPC,IAAK,iFACLC,KAAM,+HACNC,MAAO,sUACPC,QAAS,8RACTC,GAAI,qDACJC,GAAI,qDACJC,GAAI,qDACJC,GAAI,qDACJC,GAAI,qDACJC,SAAU,+DACVC,KAAM,8HACNC,SAAU,2EACVC,SAAU,kKACVC,SAAU,mFACVC,WAAY,udAGd,GACEC,KAAM,CACJC,YAAa,0CACbC,OAAQ,CACNC,MAAO,oCAKb,GACEC,MAAO,CACLH,YAAa,sFACbC,OAAQ,CACN,WAAY,wBAGhB,oBAAqB,CACnBD,YAAa,oFACbC,OAAQ,CACN,WAAY,wBAGhBG,MAAO,CACLJ,YAAa,6DACbC,OAAQ,CACN,qBAAsB,oCAG1BI,KAAM,CACJL,YAAa,6DACbC,OAAQ,CACN,qBAAsB,oCAK5B,GACEK,KAAM,WAAR,OACA,aACA,UAGEC,SAAU,CAGR7B,MAHJ,WAIM,OAAO,iCAAb,6BAEIG,OANJ,WAOM,OAAO,EAAb,mECpF0X,I,YCOtX2B,EAAY,eACd,EACAxC,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAA0B,E","file":"js/rating-api-vue.aa64f6d2.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\"}},[_vm._v(\"API\")]),_c('component-api',{staticClass:\"mt0\",attrs:{\"items\":_vm.props,\"descriptions\":_vm.propsDescs,\"title\":\"Props\"}}),_c('component-api',{attrs:{\"items\":_vm.slots,\"title\":\"Slots\"}}),_c('component-api',{attrs:{\"items\":_vm.events,\"title\":\"Events\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\ndiv\n  .w-divider.my12\n  title-link.title1(h2) API\n\n  component-api.mt0(:items=\"props\" :descriptions=\"propsDescs\" title=\"Props\")\n\n  component-api(:items=\"slots\" title=\"Slots\")\n\n  component-api(:items=\"events\" title=\"Events\")\n</template>\n\n<script>\nimport FormElementMixin from '@/wave-ui/mixins/form-elements'\nimport WRating from '@/wave-ui/components/w-rating'\n\nconst propsDescs = {\n  value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>Dictates the current rating value. When the user rates, the <code>v-model</code> value will be updated.',\n  max: 'The total count of buttons (usually stars) to display in the rating component.',\n  icon: 'Sets the icon (star by default) of each button of the rating component.<br>Accepts a string: e.g. <code>mdi mdi-home</code>.',\n  color: 'Sets the color of the rating active icons (when hovering or when showing the current rating).<br>Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\n  bgColor: 'Sets color of the background icons (grey by default).<br>Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\n  xs: 'Sets the size of the rating component (font-size).',\n  sm: 'Sets the size of the rating component (font-size).',\n  md: 'Sets the size of the rating component (font-size).',\n  lg: 'Sets the size of the rating component (font-size).',\n  xl: 'Sets the size of the rating component (font-size).',\n  noRipple: 'Removes the ripple animation on click of one of the buttons.',\n  name: 'Provide a native HTML <code>name</code> attribute to the rating component. If not provided, a unique name will be computed.',\n  disabled: 'Disables the rating component making it unreactive to user interactions.',\n  readonly: 'The rating component will still look like an interactive rating component except that it is read-only: its current value cannot be changed by user interaction.',\n  required: 'Applies the native HTML <code>required</code> attribute to the rating component.',\n  validators: '<span class=\"deep-orange\">Only for validation, when the rating component is wrapped into a <strong class=\"code\">w-form</strong></span>.<br>An array of functions determining the validity of the rating component. Each function will be executed on rating component validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the rating component.'\n}\n\nconst slots = {\n  item: {\n    description: 'Provide a custom content for each item.',\n    params: {\n      index: 'The item index, starting at 1.'\n    }\n  }\n}\n\nconst events = {\n  input: {\n    description: 'Emitted each time the rating changes.<br>Updates the v-model value in Vue 2.x only.',\n    params: {\n      '[Number]': 'The current rating.'\n    }\n  },\n  'update:modelValue': {\n    description: 'Emitted each time the rating changes.<br>Updates the v-model value in Vue 3 only.',\n    params: {\n      '[Number]': 'The current rating.'\n    }\n  },\n  focus: {\n    description: 'Emitted when the rating component is focused (any button).',\n    params: {\n      '[DOM event object]': 'The associated focus DOM event.'\n    }\n  },\n  blur: {\n    description: 'Emitted when the rating component is blurred (any button).',\n    params: {\n      '[DOM event object]': 'The associated blur DOM event.'\n    }\n  }\n}\n\nexport default {\n  data: () => ({\n    propsDescs,\n    slots\n  }),\n\n  computed: {\n    // Reads all the props and events directly from the component, so that as soon as a new prop or event\n    // is added it will appear even if no description is yet provided.\n    props () {\n      return { ...WRating.props, ...FormElementMixin.props }\n    },\n    events () {\n      return WRating.emits.reduce((obj, label) => (obj[label] = events[label] || {}) && obj, {})\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api.vue?vue&type=template&id=18153718&lang=pug&\"\nimport script from \"./api.vue?vue&type=script&lang=js&\"\nexport * from \"./api.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}