{"version":3,"sources":["webpack://WaveUI/./src/documentation/views/ui-components/select/api.vue?231a","webpack://WaveUI/src/documentation/views/ui-components/select/api.vue","webpack://WaveUI/./src/documentation/views/ui-components/select/api.vue?5551","webpack://WaveUI/./src/documentation/views/ui-components/select/api.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","props","propsDescs","slots","events","staticRenderFns","items","value","multiple","placeholder","label","labelPosition","innerIconLeft","innerIconRight","staticLabel","itemLabelKey","itemValueKey","itemClass","menuClass","color","bgColor","outline","round","shadow","tile","dark","returnObject","name","disabled","readonly","required","validators","default","selection","description","params","item","selected","index","input","focus","blur","data","computed","component"],"mappings":"qIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,KAAK,CAACP,EAAIQ,GAAG,SAASJ,EAAG,gBAAgB,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIS,MAAM,aAAeT,EAAIU,WAAW,MAAQ,WAAWN,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIW,MAAM,MAAQ,WAAWP,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIY,OAAO,MAAQ,aAAa,IAC1cC,EAAkB,G,gDCetB,GACEC,MAAO,kIACPC,MAAO,uJACPC,SAAU,4GACVC,YAAa,uIACbC,MAAO,6CACPC,cAAe,+FACfC,cAAe,wGACfC,eAAgB,yGAEhBC,YAAa,0RACbC,aAAc,uFACdC,aAAc,uFACdC,UAAW,uDACXC,UAAW,0EACXC,MAAO,4QACPC,QAAS,kRACTC,QAAS,uKACTC,MAAO,2FACPC,OAAQ,6CACRC,KAAM,8EACNC,MAAM,EACNC,aAAc,8NACdC,KAAM,0HACNC,SAAU,uEACVC,SAAU,0JACVC,SAAU,+EACVC,WAAY,ucAGd,GACEC,QAAS,CAAX,yFACEC,UAAW,CACTC,YAAa,sDACbC,OAAQ,CACNC,KAAM,oHAGVA,KAAM,CACJF,YAAa,kEACbC,OAAQ,CACNC,KAAM,2BACNC,SAAU,8DACVC,MAAO,iCAKb,GACEC,MAAO,CACLL,YAAa,gGACbC,OAAQ,CACN,+BAAgC,sGAGpC,oBAAqB,CACnBD,YAAa,8FACbC,OAAQ,CACN,+BAAgC,sGAGpCK,MAAO,CACLN,YAAa,2BACbC,OAAQ,CACN,qBAAsB,oCAG1BM,KAAM,CACJP,YAAa,0BACbC,OAAQ,CACN,qBAAsB,mCAG1B,wBAAyB,CACvBD,YAAa,mDACbC,OAAQ,CACN,qBAAsB,oCAG1B,yBAA0B,CACxBD,YAAa,oDACbC,OAAQ,CACN,qBAAsB,qCAK5B,GACEO,KAAM,WAAR,OACA,aACA,UAGEC,SAAU,CAGR1C,MAHJ,WAIM,OAAO,iCAAb,6BAEIG,OANJ,WAOM,OAAO,EAAb,mECpH0X,I,YCOtXwC,EAAY,eACd,EACArD,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAAuC,E","file":"js/select-api-vue.2162ae8d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\"}},[_vm._v(\"API\")]),_c('component-api',{staticClass:\"mt0\",attrs:{\"items\":_vm.props,\"descriptions\":_vm.propsDescs,\"title\":\"Props\"}}),_c('component-api',{attrs:{\"items\":_vm.slots,\"title\":\"Slots\"}}),_c('component-api',{attrs:{\"items\":_vm.events,\"title\":\"Events\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\ndiv\n  .w-divider.my12\n  title-link.title1(h2) API\n\n  component-api.mt0(:items=\"props\" :descriptions=\"propsDescs\" title=\"Props\")\n\n  component-api(:items=\"slots\" title=\"Slots\")\n\n  component-api(:items=\"events\" title=\"Events\")\n</template>\n\n<script>\nimport FormElementMixin from '@/wave-ui/mixins/form-elements'\nimport WSelect from '@/wave-ui/components/w-select'\n\nconst propsDescs = {\n  items: 'Expecting an array of objects. Each object being a select list item, it should include at least a <code>label</code> attribute.',\n  value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>The current selection of the select field.<br>Gets updated on selection change.',\n  multiple: 'Allows multiple selections. When set to true, the list of choices will stay open after selecting an item.',\n  placeholder: 'Provide a placeholder for the select field. If a label is positioned inside, it will be moved above the field so it doesn\\'t overlap.',\n  label: 'Sets a visible label for the select field.',\n  labelPosition: 'Sets the position of the label to one of the following positions: \\'left\\', \\'right\\', \\'inside\\'.',\n  innerIconLeft: 'Adds an icon on the left inside the select field.<br>Accepts a string: e.g. <code>mdi mdi-eye</code>.',\n  innerIconRight: 'Adds an icon on the right inside the select field.<br>Accepts a string: e.g. <code>mdi mdi-eye</code>.',\n  // When label is inside, allows to move the label above on focus or when filled.\n  staticLabel: 'Prevents moving the label above the select field when the <code>labelPosition</code> is equal to <code>inside</code>. If a placeholder is present, it will be hidden and the label will be displayed instead.<br>When a value is set the static label is replaced by the textual value.',\n  itemLabelKey: 'The property name (aka key) in each item object where to find the label of the item.',\n  itemValueKey: 'The property name (aka key) in each item object where to find the value of the item.',\n  itemClass: 'Applies a custom CSS class to each select list item.',\n  menuClass: 'Applies a custom CSS class to the select list\\'s floatting menu element.',\n  color: 'Applies a color to the select\\'s text. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\n  bgColor: 'Applies a color to the select\\'s background. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\n  outline: 'The outline style applies the provided <code>color</code> (by default the <code>primary</code> color is used) to the text and border and no background color is set.',\n  round: 'Sets a maximum border-radius on the corners of the select field, giving it a round look.',\n  shadow: 'Applies a drop shadow to the select field.',\n  tile: 'Removes the default border-radius and sets sharp edges on the select field.',\n  dark: false, // Hide the prop. 'When set to true, the text color will be set to white.',\n  returnObject: 'The current selection is returned via the <code>value</code> prop or <code>v-model</code> as an array of full objects or a single full object (returning the original as given) when <code>multiple</code> is set to false.',\n  name: 'Provide a native HTML <code>name</code> attribute to the select field. If not provided, a unique name will be computed.',\n  disabled: 'Disables the select field making it unreactive to user interactions.',\n  readonly: 'The select field will still look like an interactive select field except that it is read-only: its current value cannot be changed by user interaction.',\n  required: 'Applies the native HTML <code>required</code> attribute to the select field.',\n  validators: '<span class=\"deep-orange\">Only for validation, when the select field is wrapped into a <strong class=\"code\">w-form</strong></span>.<br>An array of functions determining the validity of the select field. Each function will be executed on select field validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the select field.'\n}\n\nconst slots = {\n  default: { description: 'The label content, if the <code>label</code> prop is not flexible enough.' },\n  selection: {\n    description: 'Provide a custom template for the selection string.',\n    params: {\n      item: 'The selected item(s) object(s). May be an array if <code>multiple</code> is true, or a single object otherwise.'\n    }\n  },\n  item: {\n    description: 'Provide a common custom template for all the select list items.',\n    params: {\n      item: 'The current item object.',\n      selected: 'A Boolean representing the selected state of the list item.',\n      index: 'The index of the list item.'\n    }\n  }\n}\n\nconst events = {\n  input: {\n    description: 'Emitted each time the selected item(s) changes.<br>Updates the v-model value in Vue 2.x only.',\n    params: {\n      '[Array, Object, Mixed value]': 'The new selected value(s). Array if <code>multiple</code> is set to true, single value otherwise.'\n    }\n  },\n  'update:modelValue': {\n    description: 'Emitted each time the selected item(s) changes.<br>Updates the v-model value in Vue 3 only.',\n    params: {\n      '[Array, Object, Mixed value]': 'The new selected value(s). Array if <code>multiple</code> is set to true, single value otherwise.'\n    }\n  },\n  focus: {\n    description: 'Emitted on select focus.',\n    params: {\n      '[DOM event object]': 'The associated focus DOM event.'\n    }\n  },\n  blur: {\n    description: 'Emitted on select blur.',\n    params: {\n      '[DOM event object]': 'The associated blur DOM event.'\n    }\n  },\n  'click:inner-icon-left': {\n    description: 'Emitted on click of the left inner icon, if any.',\n    params: {\n      '[DOM event object]': 'The associated click DOM event.'\n    }\n  },\n  'click:inner-icon-right': {\n    description: 'Emitted on click of the right inner icon, if any.',\n    params: {\n      '[DOM event object]': 'The associated click DOM event.'\n    }\n  }\n}\n\nexport default {\n  data: () => ({\n    propsDescs,\n    slots\n  }),\n\n  computed: {\n    // Reads all the props and events directly from the component, so that as soon as a new prop or event\n    // is added it will appear even if no description is yet provided.\n    props () {\n      return { ...WSelect.props, ...FormElementMixin.props }\n    },\n    events () {\n      return WSelect.emits.reduce((obj, label) => (obj[label] = events[label] || {}) && obj, {})\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api.vue?vue&type=template&id=366ad158&lang=pug&\"\nimport script from \"./api.vue?vue&type=script&lang=js&\"\nexport * from \"./api.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}