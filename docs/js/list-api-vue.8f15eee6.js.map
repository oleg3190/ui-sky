{"version":3,"sources":["webpack://WaveUI/./src/documentation/views/ui-components/list/api.vue?9865","webpack://WaveUI/src/documentation/views/ui-components/list/api.vue","webpack://WaveUI/./src/documentation/views/ui-components/list/api.vue?b83a","webpack://WaveUI/./src/documentation/views/ui-components/list/api.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","props","propsDescs","slots","events","staticRenderFns","items","value","checklist","roundCheckboxes","multiple","addIds","hover","color","bgColor","selectionColor","nav","icon","itemLabelKey","itemValueKey","itemColorKey","itemClass","depth","returnObject","arrowsNavigation","noUnselect","item","description","params","index","selected","input","data","computed","component"],"mappings":"mIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,KAAK,CAACP,EAAIQ,GAAG,SAASJ,EAAG,gBAAgB,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIS,MAAM,aAAeT,EAAIU,WAAW,MAAQ,WAAWN,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIW,MAAM,MAAQ,WAAWP,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIY,OAAO,MAAQ,aAAa,IAC1cC,EAAkB,G,wBCctB,GACEC,MAAO,+YACPC,MAAO,uVACPC,UAAW,gEACXC,gBAAiB,yFACjBC,SAAU,2FACVC,OAAQ,6HACRC,MAAO,iJACPC,MAAO,gRACPC,QAAS,sRACTC,eAAgB,+RAChBC,IAAK,iJACLC,KAAM,uFACNC,aAAc,uFACdC,aAAc,uFACdC,aAAc,uFACdC,UAAW,iDACXC,OAAO,EACPC,aAAc,mOACdC,iBAAkB,yRAClBC,WAAY,qJAGd,GACEC,KAAM,CACJC,YAAa,4HACbC,OAAQ,CACNF,KAAM,2BACNG,MAAO,8FACPC,SAAU,mEAGd,SAAU,CACRH,YAAa,+KACbC,OAAQ,CACNF,KAAM,2BACNG,MAAO,8FACPC,SAAU,oEAKhB,GACEC,MAAO,CACLJ,YAAa,8GACbC,OAAQ,CACN,UAAW,uDAGf,oBAAqB,CACnBD,YAAa,wIACbC,OAAQ,CACN,UAAW,uDASf,aAAc,CACZD,YAAa,mCACbC,OAAQ,CACN,WAAY,oCAGhB,cAAe,CACbD,YAAa,gHACbC,OAAQ,CACN,WAAY,qCAGhB,gBAAiB,CACfD,YAAa,qFAEf,iBAAkB,CAChBA,YAAa,uFAIjB,GACEK,KAAM,WAAR,OACA,aACA,UAGEC,SAAU,CAGRhC,MAHJ,WAIM,OAAO,EAAb,YAEIG,OANJ,WAOM,OAAO,EAAb,mEC7G0X,I,YCOtX8B,EAAY,eACd,EACA3C,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAA6B,E","file":"js/list-api-vue.8f15eee6.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\"}},[_vm._v(\"API\")]),_c('component-api',{staticClass:\"mt0\",attrs:{\"items\":_vm.props,\"descriptions\":_vm.propsDescs,\"title\":\"Props\"}}),_c('component-api',{attrs:{\"items\":_vm.slots,\"title\":\"Slots\"}}),_c('component-api',{attrs:{\"items\":_vm.events,\"title\":\"Events\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\r\ndiv\r\n  .w-divider.my12\r\n  title-link.title1(h2) API\r\n\r\n  component-api.mt0(:items=\"props\" :descriptions=\"propsDescs\" title=\"Props\")\r\n\r\n  component-api(:items=\"slots\" title=\"Slots\")\r\n\r\n  component-api(:items=\"events\" title=\"Events\")\r\n</template>\r\n\r\n<script>\r\nimport WList from '@/wave-ui/components/w-list'\r\n\r\nconst propsDescs = {\r\n  items: 'Expecting an array of objects. Each object being a list item, it should include at least a <code>label</code> attribute.<br>Alternatively, you can provide an integer number (call it <em class=\"code\">x</em>), to loop through and create <em class=\"code\">x</em> items in the list. You can then use the individual slots <code>item-title.x</code> &amp; <code>item-content.x</code> to define each item.',\r\n  value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>Provide an array of values if <code>multiple</code> is set to true, or a single value otherwise, to dictate the selected state of the list items.<br>Also accepts full objects when <code>return-object</code> is set to true.<br>This value gets updated when using a v-model.',\r\n  checklist: 'Sets the type of list to checklist: each item has a checkbox.',\r\n  roundCheckboxes: 'When <code>checklist</code> is true, displays round checkboxes instead of square ones.',\r\n  multiple: 'When selectable, allows multiple selections. A checklist always has multiple selections.',\r\n  addIds: 'When set to true, will add an id on the list and all the list items.<br>Useful for accessibility aria fields for instance.',\r\n  hover: 'On mouseover, highlights the list items with the given <code>color</code>. Also adds a small vertical padding on the list items to space them.',\r\n  color: 'Applies a color to the list items\\'s text. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\r\n  bgColor: 'Applies a color to the list items\\'s background. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\r\n  selectionColor: 'Applies a color to the selected list items\\'s background. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\r\n  nav: 'Set the list as a navigation menu. All the items having a `route` attribute will be converted to link or router-link if vue-router is present.',\r\n  icon: 'A global icon string to apply to all the list items. E.g. <code>mdi mdi-home</code>.',\r\n  itemLabelKey: 'The property name (aka key) in each item object where to find the label of the item.',\r\n  itemValueKey: 'The property name (aka key) in each item object where to find the value of the item.',\r\n  itemColorKey: 'The property name (aka key) in each item object where to find the color of the item.',\r\n  itemClass: 'Applies a custom CSS class to every list item.',\r\n  depth: false, // Hide this prop.\r\n  returnObject: 'The current list selection is returned via the <code>value</code> prop or <code>v-model</code> as an array of full objects or a single full object (returning the original as given) when <code>multiple</code> is set to false.',\r\n  arrowsNavigation: 'Allows the navigation through the list items with the keyboard arrows up and down, when set to true and when the items are selectable (the <strong class=\"code\">w-list</strong> has a <code>value</code> or <code>v-model</code>, or is a <code>nav</code> or <code>checklist</code>).',\r\n  noUnselect: 'Once at least one item is selected, prevents the list to have no selection. Clicking an item when only this one is selected will not unselect it.'\r\n}\r\n\r\nconst slots = {\r\n  item: {\r\n    description: 'Provide a custom content for every item. Applies to all the items, but can be overridden by the <code>item.x</code> slot.',\r\n    params: {\r\n      item: 'The current item object.',\r\n      index: 'The item index in the list. Starts at 1 to be consistent with the <code>item.x</code> slot.',\r\n      selected: 'A boolean representing the selected state of the current item.'\r\n    }\r\n  },\r\n  'item.x': {\r\n    description: '<em class=\"code\">x</em> is an integer starting at <span class=\"code\">1</span>.<br>Provide a custom content for a single item: the item at the index <em class=\"code\">x</em>.',\r\n    params: {\r\n      item: 'The current item object.',\r\n      index: 'The item index in the list. Starts at 1 to be consistent with the <code>item.x</code> slot.',\r\n      selected: 'A boolean representing the selected state of the current item.'\r\n    }\r\n  }\r\n}\r\n\r\nconst events = {\r\n  input: {\r\n    description: 'Emitted each time the state of the list changes.<br>Updates the <code>v-model</code> value in Vue 2.x only.',\r\n    params: {\r\n      '[Array]': 'An array of values of all the selected list items.'\r\n    }\r\n  },\r\n  'update:modelValue': {\r\n    description: 'Emitted each time the state of the list changes (when an item is selected or unselected).<br>Updates the v-model value in Vue 3 only.',\r\n    params: {\r\n      '[Array]': 'An array of values of all the selected list items.'\r\n    }\r\n  },\r\n  // focus: {\r\n  //   description: 'Emitted on each list item title focus.',\r\n  //   params: {\r\n  //     '[DOM event object]': 'The associated focus DOM event.'\r\n  //   }\r\n  // },\r\n  'item-click': {\r\n    description: 'Emitted on each list item click.',\r\n    params: {\r\n      '[Object]': 'The clicked list item\\'s object.'\r\n    }\r\n  },\r\n  'item-select': {\r\n    description: 'Emitted on each list item selection or unselection (via click or keyboard <kbd>enter</kbd> key when focused).',\r\n    params: {\r\n      '[Object]': 'The selected list item\\'s object.'\r\n    }\r\n  },\r\n  'keydown:enter': {\r\n    description: 'Emitted on <kbd>enter</kbd> key down, when the focus is on any of the list items.'\r\n  },\r\n  'keydown:escape': {\r\n    description: 'Emitted on <kbd>escape</kbd> key down, when the focus is on any of the list items.'\r\n  }\r\n}\r\n\r\nexport default {\r\n  data: () => ({\r\n    propsDescs,\r\n    slots\r\n  }),\r\n\r\n  computed: {\r\n    // Reads all the props and events directly from the component, so that as soon as a new prop or event\r\n    // is added it will appear even if no description is yet provided.\r\n    props () {\r\n      return WList.props\r\n    },\r\n    events () {\r\n      return WList.emits.reduce((obj, label) => (obj[label] = events[label] || {}) && obj, {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api.vue?vue&type=template&id=67b1d0b6&lang=pug&\"\nimport script from \"./api.vue?vue&type=script&lang=js&\"\nexport * from \"./api.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}