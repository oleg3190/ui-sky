{"version":3,"sources":["webpack://WaveUI/./src/documentation/views/ui-components/radio/api.vue?df0c","webpack://WaveUI/src/documentation/views/ui-components/radio/api.vue","webpack://WaveUI/./src/documentation/views/ui-components/radio/api.vue?610a","webpack://WaveUI/./src/documentation/views/ui-components/radio/api.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","radiosProps","radios","propsDescs","slots","radiosEvents","radioProps","radio","radioEvents","staticRenderFns","items","value","labelOnLeft","itemLabelKey","itemValueKey","itemColorKey","inline","color","name","disabled","readonly","required","validators","item","events","input","description","params","focus","returnValue","label","noRipple","default","data","computed","component"],"mappings":"kIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,GAAG,KAAO,iBAAiB,CAACP,EAAIQ,GAAG,oBAAoBJ,EAAG,gBAAgB,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIS,YAAY,aAAeT,EAAIU,OAAOC,WAAW,MAAQ,WAAWP,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIU,OAAOE,MAAM,MAAQ,WAAWR,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIa,aAAa,MAAQ,YAAYT,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,GAAG,KAAO,gBAAgB,CAACP,EAAIQ,GAAG,mBAAmBJ,EAAG,gBAAgB,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIc,WAAW,aAAed,EAAIe,MAAMJ,WAAW,MAAQ,WAAWP,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIe,MAAMH,MAAM,MAAQ,WAAWR,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIgB,YAAY,MAAQ,aAAa,IAC75BC,EAAkB,G,4DC6BtB,GACEN,WAAY,CACVO,MAAO,8IACPC,MAAO,mNACPC,YAAa,oGACbC,aAAc,gGACdC,aAAc,gGACdC,aAAc,gGACdC,OAAQ,8DACRC,MAAO,kRACPC,KAAM,uKACNC,SAAU,8EACVC,SAAU,0JACVC,SAAU,gFACVC,WAAY,2eAEdlB,MAAO,CACLmB,KAAM,CAAV,sEAEEC,OAAQ,CACNC,MAAO,CACLC,YAAa,uGACbC,OAAQ,CACN,4BAA6B,wNAGjC,oBAAqB,CACnBD,YAAa,qGACbC,OAAQ,CACN,4BAA6B,wNAGjCC,MAAO,CACLF,YAAa,sCACbC,OAAQ,CACN,qBAAsB,sCAM9B,GACExB,WAAY,CACVQ,MAAO,6LACPkB,YAAa,wQACbC,MAAO,6CACPlB,YAAa,mGACbK,MAAO,sRACPc,SAAU,0CACVb,KAAM,0HACNC,SAAU,uEACVC,SAAU,0JACVC,SAAU,+EACVC,WAAY,wcAEdlB,MAAO,CACL4B,QAAS,CAAb,gDAEER,OAAQ,CACNC,MAAO,CACLC,YAAa,yGACbC,OAAQ,CACN,YAAa,2CAGjB,oBAAqB,CACnBD,YAAa,uGACbC,OAAQ,CACN,YAAa,2CAGjBC,MAAO,CACLF,YAAa,sCACbC,OAAQ,CACN,qBAAsB,sCAM9B,GACEM,KAAM,WAAR,OACA,SACA,UAGEC,SAAU,CAGRjC,YAHJ,WAIM,OAAO,iCAAb,6BAEIK,WANJ,WAOM,OAAO,iCAAb,6BAEID,aATJ,WAUM,OAAO,EAAb,wEAEIG,YAZJ,WAaM,OAAO,EAAb,0ECjI0X,I,YCOtX2B,EAAY,eACd,EACA5C,EACAkB,GACA,EACA,KACA,KACA,MAIa,aAAA0B,E","file":"js/radio-api-vue.a1239541.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\",\"slug\":\"w-radios-api\"}},[_vm._v(\"<w-radios> API\")]),_c('component-api',{staticClass:\"mt0\",attrs:{\"items\":_vm.radiosProps,\"descriptions\":_vm.radios.propsDescs,\"title\":\"Props\"}}),_c('component-api',{attrs:{\"items\":_vm.radios.slots,\"title\":\"Slots\"}}),_c('component-api',{attrs:{\"items\":_vm.radiosEvents,\"title\":\"Events\"}}),_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\",\"slug\":\"w-radio-api\"}},[_vm._v(\"<w-radio> API\")]),_c('component-api',{staticClass:\"mt0\",attrs:{\"items\":_vm.radioProps,\"descriptions\":_vm.radio.propsDescs,\"title\":\"Props\"}}),_c('component-api',{attrs:{\"items\":_vm.radio.slots,\"title\":\"Slots\"}}),_c('component-api',{attrs:{\"items\":_vm.radioEvents,\"title\":\"Events\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\ndiv\n  .w-divider.my12\n\n  //- w-radios.\n  title-link.title1(h2 slug=\"w-radios-api\") &lt;w-radios&gt; API\n\n  component-api.mt0(:items=\"radiosProps\" :descriptions=\"radios.propsDescs\" title=\"Props\")\n\n  component-api(:items=\"radios.slots\" title=\"Slots\")\n\n  component-api(:items=\"radiosEvents\" title=\"Events\")\n\n  .w-divider.my12\n\n  //- w-radio.\n  title-link.title1(h2 slug=\"w-radio-api\") &lt;w-radio&gt; API\n\n  component-api.mt0(:items=\"radioProps\" :descriptions=\"radio.propsDescs\" title=\"Props\")\n\n  component-api(:items=\"radio.slots\" title=\"Slots\")\n\n  component-api(:items=\"radioEvents\" title=\"Events\")\n</template>\n\n<script>\nimport FormElementMixin from '@/wave-ui/mixins/form-elements'\nimport WRadios from '@/wave-ui/components/w-radios'\nimport WRadio from '@/wave-ui/components/w-radio'\n\nconst radios = {\n  propsDescs: {\n    items: 'An array of radio button items to display. Each item object should contain at least a <code>label</code> or a <code>value</code> attribute.',\n    value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>Provide a value (of one of the <code>items</code> objects) to dictate the selected choice.<br>This value gets updated when using a v-model.',\n    labelOnLeft: 'Moves the label to the left of each radio button. By default the label is displayed on the right.',\n    itemLabelKey: 'The property name (aka key) in each item object where to find the label of the item (if any).',\n    itemValueKey: 'The property name (aka key) in each item object where to find the value of the item (if any).',\n    itemColorKey: 'The property name (aka key) in each item object where to find the color of the item (if any).',\n    inline: 'Displays all the radio buttons inline instead of in column.',\n    color: 'Applies a color to the active radio buttons. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\n    name: 'Provide a native HTML <code>name</code> attribute to each radio button. If not provided, a unique common name will be computed and applied to all the radio buttons.',\n    disabled: 'Disables all the radio buttons making them unreactive to user interactions.',\n    readonly: 'The radio button will still look like an interactive radio button except that it is read-only: its current value cannot be changed by user interaction.',\n    required: 'Applies the native HTML <code>required</code> attribute to each radio button.',\n    validators: '<span class=\"deep-orange\">Only for validation, when the <strong class=\"code\">w-radios</strong> component is wrapped into a <strong class=\"code\">w-form</strong></span>.<br>An array of functions determining the validity of the radio button. Each function will be executed on radio button validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the radio button.'\n  },\n  slots: {\n    item: { description: 'Provide a custom content for each radio button label.' }\n  },\n  events: {\n    input: {\n      description: 'Emitted each time any of the radio buttons is toggled.<br>Updates the v-model value in Vue 2.x only.',\n      params: {\n        '[String, Number, Boolean]': 'The <code>return-value</code> of the selected radio button.<br>The <code>return-value</code> will be one of the following attributes, if they exist, in this order: the item value, the item label, the item index.'\n      }\n    },\n    'update:modelValue': {\n      description: 'Emitted each time any of the radio buttons is toggled.<br>Updates the v-model value in Vue 3 only.',\n      params: {\n        '[String, Number, Boolean]': 'The <code>return-value</code> of the selected radio button.<br>The <code>return-value</code> will be one of the following attributes, if they exist, in this order: the item value, the item label, the item index.'\n      }\n    },\n    focus: {\n      description: 'Emitted on each radio button focus.',\n      params: {\n        '[DOM event object]': 'The associated focus DOM event.'\n      }\n    }\n  }\n}\n\nconst radio = {\n  propsDescs: {\n    value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>Provide a boolean to dictate the selected state of the radio button.<br>This value gets updated when using a v-model.',\n    returnValue: 'Since the native HTML radio uses the <code>value</code> attribute to define the selected state, the <code>return-value</code> prop let you specify a value to return to the <code>v-model</code> when the radio is selected (instead of returning <code>true</code>).',\n    label: 'Sets a visible label for the radio button.',\n    labelOnLeft: 'Moves the label to the left of the radio button. By default the label is displayed on the right.',\n    color: 'Applies a color to the radio button when active. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\n    noRipple: 'Removes the ripple animation on select.',\n    name: 'Provide a native HTML <code>name</code> attribute to the radio button. If not provided, a unique name will be computed.',\n    disabled: 'Disables the radio button making it unreactive to user interactions.',\n    readonly: 'The radio button will still look like an interactive radio button except that it is read-only: its current value cannot be changed by user interaction.',\n    required: 'Applies the native HTML <code>required</code> attribute to the radio button.',\n    validators: '<span class=\"deep-orange\">Only for validation, when this radio button is wrapped into a <strong class=\"code\">w-form</strong></span>.<br>An array of functions determining the validity of the radio button. Each function will be executed on radio button validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the radio button.'\n  },\n  slots: {\n    default: { description: 'The radio button label content.' }\n  },\n  events: {\n    input: {\n      description: 'Emitted each time the state of the radio button changes.<br>Updates the v-model value in Vue 2.x only.',\n      params: {\n        '[Boolean]': 'The current state of the radio button.'\n      }\n    },\n    'update:modelValue': {\n      description: 'Emitted each time the state of the radio button changes.<br>Updates the v-model value in Vue 3 only.',\n      params: {\n        '[Boolean]': 'The current state of the radio button.'\n      }\n    },\n    focus: {\n      description: 'Emitted on each radio button focus.',\n      params: {\n        '[DOM event object]': 'The associated focus DOM event.'\n      }\n    }\n  }\n}\n\nexport default {\n  data: () => ({\n    radios,\n    radio\n  }),\n\n  computed: {\n    // Reads all the props and events directly from the component, so that as soon as a new prop or event\n    // is added it will appear even if no description is yet provided.\n    radiosProps () {\n      return { ...WRadios.props, ...FormElementMixin.props }\n    },\n    radioProps () {\n      return { ...WRadio.props, ...FormElementMixin.props }\n    },\n    radiosEvents () {\n      return WRadios.emits.reduce((obj, label) => (obj[label] = radios.events[label] || {}) && obj, {})\n    },\n    radioEvents () {\n      return WRadio.emits.reduce((obj, label) => (obj[label] = radio.events[label] || {}) && obj, {})\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api.vue?vue&type=template&id=7bab27da&lang=pug&\"\nimport script from \"./api.vue?vue&type=script&lang=js&\"\nexport * from \"./api.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}