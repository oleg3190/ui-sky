{"version":3,"sources":["webpack://WaveUI/./src/documentation/views/ui-components/tabs/api.vue?f204","webpack://WaveUI/src/documentation/views/ui-components/tabs/api.vue","webpack://WaveUI/./src/documentation/views/ui-components/tabs/api.vue?183e","webpack://WaveUI/./src/documentation/views/ui-components/tabs/api.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","props","propsDescs","slots","events","staticRenderFns","value","color","bgColor","items","titleClass","activeClass","noSlider","sliderColor","contentClass","transition","fillBar","center","right","card","description","params","item","index","active","input","focus","data","computed","component"],"mappings":"mIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,KAAK,CAACP,EAAIQ,GAAG,SAASJ,EAAG,gBAAgB,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIS,MAAM,aAAeT,EAAIU,WAAW,MAAQ,WAAWN,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIW,MAAM,MAAQ,WAAWP,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIY,OAAO,MAAQ,aAAa,IAC1cC,EAAkB,G,wBCctB,GACEC,MAAO,6MACPC,MAAO,oRACPC,QAAS,0RACTC,MAAO,qaACPC,WAAY,+CACZC,YAAa,sDACbC,SAAU,wEACVC,YAAa,sTACbC,aAAc,iDACdC,WAAY,2MACZC,QAAS,0EACTC,OAAQ,2BACRC,MAAO,uCACPC,KAAM,kDAGR,GACE,aAAc,CACZC,YAAa,8HACbC,OAAQ,CACNC,KAAM,0BACNC,MAAO,sGACPC,OAAQ,wDAGZ,eAAgB,CACdJ,YAAa,2KACbC,OAAQ,CACNC,KAAM,0BACNC,MAAO,sGACPC,OAAQ,wDAGZ,eAAgB,CACdJ,YAAa,kIACbC,OAAQ,CACNC,KAAM,0BACNC,MAAO,sGACPC,OAAQ,wDAGZ,iBAAkB,CAChBJ,YAAa,6KACbC,OAAQ,CACNC,KAAM,0BACNC,MAAO,sGACPC,OAAQ,yDAMd,GACEC,MAAO,CACLL,YAAa,2FACbC,OAAQ,CACN,UAAW,oEAGf,oBAAqB,CACnBD,YAAa,yFACbC,OAAQ,CACN,UAAW,oEAGfK,MAAO,CACLN,YAAa,mCACbC,OAAQ,CACN,WAAY,kCAKlB,GACEM,KAAM,WAAR,OACA,aACA,UAGEC,SAAU,CAGR3B,MAHJ,WAIM,OAAO,EAAb,YAEIG,OANJ,WAOM,OAAO,EAAb,mECtG0X,I,YCOtXyB,EAAY,eACd,EACAtC,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAAwB,E","file":"js/tabs-api-vue.7f1a325c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\"}},[_vm._v(\"API\")]),_c('component-api',{staticClass:\"mt0\",attrs:{\"items\":_vm.props,\"descriptions\":_vm.propsDescs,\"title\":\"Props\"}}),_c('component-api',{attrs:{\"items\":_vm.slots,\"title\":\"Slots\"}}),_c('component-api',{attrs:{\"items\":_vm.events,\"title\":\"Events\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\ndiv\n  .w-divider.my12\n  title-link.title1(h2) API\n\n  component-api.mt0(:items=\"props\" :descriptions=\"propsDescs\" title=\"Props\")\n\n  component-api(:items=\"slots\" title=\"Slots\")\n\n  component-api(:items=\"events\" title=\"Events\")\n</template>\n\n<script>\nimport WTabs from '@/wave-ui/components/w-tabs'\n\nconst propsDescs = {\n  value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>Provide an array of booleans to dictate the state (active or not) of all the tab items. This value gets updated when using a v-model.',\n  color: 'Applies a color to the each tab title\\'s text. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\n  bgColor: 'Applies a color to the each tab title\\'s background. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\n  items: 'Expecting an array of objects. Each object being an tab item, it should include a <code>title</code> and <code>content</code> attributes.<br>Alternatively, you can provide an integer number (call it <em class=\"code\">x</em>), to loop through and create <em class=\"code\">x</em> tabs. You can then use the individual slots <code>item-title.x</code> &amp; <code>item-content.x</code> to define each item title and content.',\n  titleClass: 'Applies a custom CSS class to the tab title.',\n  activeClass: 'Applies a custom CSS class to the active tab title.',\n  noSlider: 'When set to true, removes the slider underneath the active tab title.',\n  sliderColor: 'Provide a custom color for the tabs slider (<code>primary</code> by default).<br>Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\n  contentClass: 'Applies a custom CSS class to the tab content.',\n  transition: 'Applies a particular transition to the tab contents when switching tab.<br>Check all the transitions that apply to this component in the <a href=\"#content-transitions\">Content transitions</a> example.',\n  fillBar: 'When set to true, the tabs titles will occupy the full available width.',\n  center: 'Centers the tabs titles.',\n  right: 'Aligns the tabs titles to the right.',\n  card: 'Applies the card style on all the tabs titles.'\n}\n\nconst slots = {\n  'item-title': {\n    description: 'Provide a custom title for every tab. Applies to all the tabs, but can be overridden by the <code>item-title.x</code> slot.',\n    params: {\n      item: 'The current tab object.',\n      index: 'The tab index in the array of tabs. Starts at 1 to be consistent with the <code>item.x</code> slot.',\n      active: 'A boolean representing the active state of the tab.'\n    }\n  },\n  'item-title.x': {\n    description: '<em class=\"code\">x</em> is an integer starting at <span class=\"code\">1</span>.<br>Provide a custom title for a single tab: the tab at the index <em class=\"code\">x</em>.',\n    params: {\n      item: 'The current tab object.',\n      index: 'The tab index in the array of tabs. Starts at 1 to be consistent with the <code>item.x</code> slot.',\n      active: 'A boolean representing the active state of the tab.'\n    }\n  },\n  'item-content': {\n    description: 'Provide a custom content for every tab. Applies to all the tabs, but can be overridden by the <code>item-content.x</code> slot.',\n    params: {\n      item: 'The current tab object.',\n      index: 'The tab index in the array of tabs. Starts at 1 to be consistent with the <code>item.x</code> slot.',\n      active: 'A boolean representing the active state of the tab.'\n    }\n  },\n  'item-content.x': {\n    description: '<em class=\"code\">x</em> is an integer starting at <span class=\"code\">1</span>.<br>Provide a custom content for a single tab: the tab at the index <em class=\"code\">x</em>.',\n    params: {\n      item: 'The current tab object.',\n      index: 'The tab index in the array of tabs. Starts at 1 to be consistent with the <code>item.x</code> slot.',\n      active: 'A boolean representing the active state of the tab.'\n    }\n  }\n\n}\n\nconst events = {\n  input: {\n    description: 'Emitted each time the current tab changes.<br>Updates the v-model value in Vue 2.x only.',\n    params: {\n      '[Array]': 'An array of booleans representing the active state of each tab.'\n    }\n  },\n  'update:modelValue': {\n    description: 'Emitted each time the current tab changes.<br>Updates the v-model value in Vue 3 only.',\n    params: {\n      '[Array]': 'An array of booleans representing the active state of each tab.'\n    }\n  },\n  focus: {\n    description: 'Emitted on each tab title focus.',\n    params: {\n      '[Object]': 'The focused tab item object.'\n    }\n  }\n}\n\nexport default {\n  data: () => ({\n    propsDescs,\n    slots\n  }),\n\n  computed: {\n    // Reads all the props and events directly from the component, so that as soon as a new prop or event\n    // is added it will appear even if no description is yet provided.\n    props () {\n      return WTabs.props\n    },\n    events () {\n      return WTabs.emits.reduce((obj, label) => (obj[label] = events[label] || {}) && obj, {})\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api.vue?vue&type=template&id=7c0e505f&lang=pug&\"\nimport script from \"./api.vue?vue&type=script&lang=js&\"\nexport * from \"./api.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}