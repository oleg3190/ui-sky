{"version":3,"sources":["webpack://WaveUI/./src/documentation/views/ui-components/form/api.vue?e2f7","webpack://WaveUI/src/documentation/views/ui-components/form/api.vue","webpack://WaveUI/./src/documentation/views/ui-components/form/api.vue?edac","webpack://WaveUI/./src/documentation/views/ui-components/form/api.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","props","propsDescs","slots","events","staticRenderFns","value","allowSubmit","noKeyupValidation","noBlurValidation","errorPlaceholders","default","submit","description","params","validate","e","errorsCount","success","error","reset","input","data","computed","component"],"mappings":"mIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,KAAK,CAACP,EAAIQ,GAAG,SAASJ,EAAG,gBAAgB,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIS,MAAM,aAAeT,EAAIU,WAAW,MAAQ,WAAWN,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIW,MAAM,MAAQ,WAAWP,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIY,OAAO,MAAQ,aAAa,IAC1cC,EAAkB,G,wBCctB,GACEC,MAAO,ocACPC,YAAa,oOACbC,kBAAmB,wEACnBC,iBAAkB,uEAClBC,kBAAmB,kJAGrB,GACEC,QAAS,CAAX,kCAGA,GACEC,OAAQ,CACNC,YAAa,0BACbC,OAAQ,CACN,qBAAsB,oCAG1B,kBAAmB,CACjBD,YAAa,oEAEfE,SAAU,CACRF,YAAa,yGACbC,OAAQ,CACNE,EAAG,4BACHC,YAAa,8DAGjBC,QAAS,CACPL,YAAa,uIACbC,OAAQ,CACNE,EAAG,4BACHC,YAAa,8DAGjBE,MAAO,CACLN,YAAa,uIACbC,OAAQ,CACNE,EAAG,4BACHC,YAAa,8DAGjBG,MAAO,CACLP,YAAa,yHACbC,OAAQ,CACN,qBAAsB,oCAG1BO,MAAO,CACLR,YAAa,4FACbC,OAAQ,CACN,kBAAmB,uIAGvB,oBAAqB,CACnBD,YAAa,0FACbC,OAAQ,CACN,kBAAmB,uIAGvB,qBAAsB,CACpBD,YAAa,wJACbC,OAAQ,CACN,YAAa,uCAKnB,GACEQ,KAAM,WAAR,OACA,aACA,UAGEC,SAAU,CAGRtB,MAHJ,WAIM,OAAO,EAAb,YAEIG,OANJ,WAOM,OAAO,EAAb,mECjG0X,I,YCOtXoB,EAAY,eACd,EACAjC,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAAmB,E","file":"js/form-api-vue.d42a0e7e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\"}},[_vm._v(\"API\")]),_c('component-api',{staticClass:\"mt0\",attrs:{\"items\":_vm.props,\"descriptions\":_vm.propsDescs,\"title\":\"Props\"}}),_c('component-api',{attrs:{\"items\":_vm.slots,\"title\":\"Slots\"}}),_c('component-api',{attrs:{\"items\":_vm.events,\"title\":\"Events\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\r\ndiv\r\n  .w-divider.my12\r\n  title-link.title1(h2) API\r\n\r\n  component-api.mt0(:items=\"props\" :descriptions=\"propsDescs\" title=\"Props\")\r\n\r\n  component-api(:items=\"slots\" title=\"Slots\")\r\n\r\n  component-api(:items=\"events\" title=\"Events\")\r\n</template>\r\n\r\n<script>\r\nimport WForm from '@/wave-ui/components/w-form'\r\n\r\nconst propsDescs = {\r\n  value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>Contains the status of the form validity at all times. Three values are possible: <code>null</code> when pristine (untouched), <code>false</code> when invalid, <code>true</code> when valid.<br>This value gets updated every time a validation is triggered on a single field or on all the fields at once on form submit.<br>Setting this value to <code>null</code> will reset the form.',\r\n  allowSubmit: 'Native HTML submits the form to the server when all the form elements are valid.<br>Usually and by default, the form submission is prevented and an AJAX call is made from the front end. This is completely up to the developer.',\r\n  noKeyupValidation: 'Prevents the form element validation on keyup (happening by default).',\r\n  noBlurValidation: 'Prevents the form element validation on blur (happening by default).',\r\n  errorPlaceholders: 'Reserves a space under all the form elements so that triggering an error and showing the error message will not change the height of the form.'\r\n}\r\n\r\nconst slots = {\r\n  default: { description: 'The form content.' }\r\n}\r\n\r\nconst events = {\r\n  submit: {\r\n    description: 'Emitted on form submit.',\r\n    params: {\r\n      '[DOM event object]': 'The associated reset DOM event.'\r\n    }\r\n  },\r\n  'before-validate': {\r\n    description: 'Emitted before validation, every time a validation is triggered.'\r\n  },\r\n  validate: {\r\n    description: 'Emitted on form validate, every time a validation is triggered.<br>Returns a single object containing:',\r\n    params: {\r\n      e: 'The associated DOM event.',\r\n      errorsCount: 'An integer representing the number of errors in the form.'\r\n    }\r\n  },\r\n  success: {\r\n    description: 'Emitted on form success, when there is no error in the form and the validation is successful.<br>Returns a single object containing:',\r\n    params: {\r\n      e: 'The associated DOM event.',\r\n      errorsCount: 'An integer representing the number of errors in the form.'\r\n    }\r\n  },\r\n  error: {\r\n    description: 'Emitted on form error, when there is at least one error in the form and the validation fails.<br>Returns a single object containing:',\r\n    params: {\r\n      e: 'The associated DOM event.',\r\n      errorsCount: 'An integer representing the number of errors in the form.'\r\n    }\r\n  },\r\n  reset: {\r\n    description: 'Emitted on form reset. A reset can be triggered by setting the v-model value to null or by clicking on a reset button.',\r\n    params: {\r\n      '[DOM event object]': 'The associated reset DOM event.'\r\n    }\r\n  },\r\n  input: {\r\n    description: 'Emitted every time the form status changes.<br>Updates the v-model value in Vue 2.x only.',\r\n    params: {\r\n      '[Boolean, Null]': 'The new status of the form: one of <code>null</code> when pristine, <code>false</code> when invalid, <code>true</code> when valid.'\r\n    }\r\n  },\r\n  'update:modelValue': {\r\n    description: 'Emitted every time the form status changes.<br>Updates the v-model value in Vue 3 only.',\r\n    params: {\r\n      '[Boolean, Null]': 'The new status of the form: one of <code>null</code> when pristine, <code>false</code> when invalid, <code>true</code> when valid.'\r\n    }\r\n  },\r\n  'update:errorsCount': {\r\n    description: 'Emitted every time the errorsCount changes. To be used with <code>:errors-count.sync</code> on Vue 2.x or <code>v-model:errors-count</code> on Vue 3.',\r\n    params: {\r\n      '[Integer]': 'The number of errors in the form.'\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  data: () => ({\r\n    propsDescs,\r\n    slots\r\n  }),\r\n\r\n  computed: {\r\n    // Reads all the props and events directly from the component, so that as soon as a new prop or event\r\n    // is added it will appear even if no description is yet provided.\r\n    props () {\r\n      return WForm.props\r\n    },\r\n    events () {\r\n      return WForm.emits.reduce((obj, label) => (obj[label] = events[label] || {}) && obj, {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api.vue?vue&type=template&id=a49a5360&lang=pug&\"\nimport script from \"./api.vue?vue&type=script&lang=js&\"\nexport * from \"./api.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}