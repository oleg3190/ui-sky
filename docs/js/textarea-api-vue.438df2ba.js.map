{"version":3,"sources":["webpack://WaveUI/./src/documentation/views/ui-components/textarea/api.vue?2e4b","webpack://WaveUI/src/documentation/views/ui-components/textarea/api.vue","webpack://WaveUI/./src/documentation/views/ui-components/textarea/api.vue?7b95","webpack://WaveUI/./src/documentation/views/ui-components/textarea/api.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","props","propsDescs","slots","events","staticRenderFns","value","label","labelPosition","innerIconLeft","innerIconRight","staticLabel","placeholder","color","bgColor","dark","outline","shadow","noAutogrow","resizable","tile","rows","cols","name","disabled","readonly","required","validators","default","input","description","params","focus","blur","data","computed","component"],"mappings":"qIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,KAAK,CAACP,EAAIQ,GAAG,SAASJ,EAAG,gBAAgB,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIS,MAAM,aAAeT,EAAIU,WAAW,MAAQ,WAAWN,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIW,MAAM,MAAQ,WAAWP,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIY,OAAO,MAAQ,aAAa,IAC1cC,EAAkB,G,gDCetB,GACEC,MAAO,4IACPC,MAAO,yCACPC,cAAe,+FACfC,cAAe,oGACfC,eAAgB,qGAEhBC,YAAa,sRACbC,YAAa,sIACbC,MAAO,8QACPC,QAAS,oRACTC,MAAM,EACNC,QAAS,uKACTC,OAAQ,yCACRC,WAAY,gKACZC,UAAW,mDACXC,KAAM,0EACNC,KAAM,6FACNC,KAAM,+FACNC,KAAM,sHACNC,SAAU,mEACVC,SAAU,oJACVC,SAAU,2EACVC,WAAY,ubAGd,GACEC,QAAS,CAAX,0FAGA,GACEC,MAAO,CACLC,YAAa,6FACbC,OAAQ,CACN,WAAY,4BAGhB,oBAAqB,CACnBD,YAAa,2FACbC,OAAQ,CACN,WAAY,4BAGhBC,MAAO,CACLF,YAAa,6BACbC,OAAQ,CACN,qBAAsB,oCAG1BE,KAAM,CACJH,YAAa,4BACbC,OAAQ,CACN,qBAAsB,mCAG1B,wBAAyB,CACvBD,YAAa,mDACbC,OAAQ,CACN,qBAAsB,oCAG1B,yBAA0B,CACxBD,YAAa,oDACbC,OAAQ,CACN,qBAAsB,qCAK5B,GACEG,KAAM,WAAR,OACA,aACA,UAGEC,SAAU,CAGRlC,MAHJ,WAIM,OAAO,iCAAb,6BAEIG,OANJ,WAOM,OAAO,EAAb,mEClG0X,I,YCOtXgC,EAAY,eACd,EACA7C,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAA+B,E","file":"js/textarea-api-vue.438df2ba.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\"}},[_vm._v(\"API\")]),_c('component-api',{staticClass:\"mt0\",attrs:{\"items\":_vm.props,\"descriptions\":_vm.propsDescs,\"title\":\"Props\"}}),_c('component-api',{attrs:{\"items\":_vm.slots,\"title\":\"Slots\"}}),_c('component-api',{attrs:{\"items\":_vm.events,\"title\":\"Events\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\r\ndiv\r\n  .w-divider.my12\r\n  title-link.title1(h2) API\r\n\r\n  component-api.mt0(:items=\"props\" :descriptions=\"propsDescs\" title=\"Props\")\r\n\r\n  component-api(:items=\"slots\" title=\"Slots\")\r\n\r\n  component-api(:items=\"events\" title=\"Events\")\r\n</template>\r\n\r\n<script>\r\nimport FormElementMixin from '@/wave-ui/mixins/form-elements'\r\nimport Wtextarea from '@/wave-ui/components/w-textarea'\r\n\r\nconst propsDescs = {\r\n  value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>The text content of the textarea.<br>Gets updated on textarea input.',\r\n  label: 'Sets a visible label for the textarea.',\r\n  labelPosition: 'Sets the position of the label to one of the following positions: \\'left\\', \\'right\\', \\'inside\\'.',\r\n  innerIconLeft: 'Adds an icon on the left inside the textarea.<br>Accepts a string: e.g. <code>mdi mdi-eye</code>.',\r\n  innerIconRight: 'Adds an icon on the right inside the textarea.<br>Accepts a string: e.g. <code>mdi mdi-eye</code>.',\r\n  // When label is inside, allows to move the label above on focus or when filled.\r\n  staticLabel: 'Prevents moving the label above the textarea when the <code>labelPosition</code> is equal to <code>inside</code>. If a placeholder is present, it will be hidden and the label will be displayed instead.<br>When a value is set the static label is replaced by the textual value.',\r\n  placeholder: 'Provide a placeholder for the textarea. If a label is positioned inside, it will be moved above the textarea so it doesn\\'t overlap.',\r\n  color: 'Applies a color to the textarea\\'s text. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\r\n  bgColor: 'Applies a color to the textarea\\'s background. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\r\n  dark: false, // Hide the prop. 'When set to true, the text color will be set to white.',\r\n  outline: 'The outline style applies the provided <code>color</code> (by default the <code>primary</code> color is used) to the text and border and no background color is set.',\r\n  shadow: 'Applies a drop shadow to the textarea.',\r\n  noAutogrow: 'Disables the ability to fit the textarea height to the content.<br>The height will not be smaller than the number of rows set via the <code>rows</code> prop.',\r\n  resizable: 'Allows native resizing of the textarea\\'s height.',\r\n  tile: 'Removes the default border-radius and sets sharp edges on the textarea.',\r\n  rows: 'The default and minimum number of rows to display in the textarea (native HTML attribute).',\r\n  cols: 'Applies the native HTML <code>cols</code> attribute to the textarea (native HTML attribute).',\r\n  name: 'Provide a native HTML <code>name</code> attribute to the textarea. If not provided, a unique name will be computed.',\r\n  disabled: 'Disables the textarea making it unreactive to user interactions.',\r\n  readonly: 'The textarea will still look like an interactive textarea except that it is read-only: its current content cannot be changed by user interaction.',\r\n  required: 'Applies the native HTML <code>required</code> attribute to the textarea.',\r\n  validators: '<span class=\"deep-orange\">Only for validation, when the textarea is wrapped into a <strong class=\"code\">w-form</strong></span>.<br>An array of functions determining the validity of the textarea. Each function will be executed on textarea validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the textarea.'\r\n}\r\n\r\nconst slots = {\r\n  default: { description: 'The label content, if the <code>label</code> prop is not flexible enough.' }\r\n}\r\n\r\nconst events = {\r\n  input: {\r\n    description: 'Emitted each time the textarea text changes.<br>Updates the v-model value in Vue 2.x only.',\r\n    params: {\r\n      '[String]': 'The new textarea value.'\r\n    }\r\n  },\r\n  'update:modelValue': {\r\n    description: 'Emitted each time the textarea text changes.<br>Updates the v-model value in Vue 3 only.',\r\n    params: {\r\n      '[String]': 'The new textarea value.'\r\n    }\r\n  },\r\n  focus: {\r\n    description: 'Emitted on textarea focus.',\r\n    params: {\r\n      '[DOM event object]': 'The associated focus DOM event.'\r\n    }\r\n  },\r\n  blur: {\r\n    description: 'Emitted on textarea blur.',\r\n    params: {\r\n      '[DOM event object]': 'The associated blur DOM event.'\r\n    }\r\n  },\r\n  'click:inner-icon-left': {\r\n    description: 'Emitted on click of the left inner icon, if any.',\r\n    params: {\r\n      '[DOM event object]': 'The associated click DOM event.'\r\n    }\r\n  },\r\n  'click:inner-icon-right': {\r\n    description: 'Emitted on click of the right inner icon, if any.',\r\n    params: {\r\n      '[DOM event object]': 'The associated click DOM event.'\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  data: () => ({\r\n    propsDescs,\r\n    slots\r\n  }),\r\n\r\n  computed: {\r\n    // Reads all the props and events directly from the component, so that as soon as a new prop or event\r\n    // is added it will appear even if no description is yet provided.\r\n    props () {\r\n      return { ...Wtextarea.props, ...FormElementMixin.props }\r\n    },\r\n    events () {\r\n      return Wtextarea.emits.reduce((obj, label) => (obj[label] = events[label] || {}) && obj, {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api.vue?vue&type=template&id=4f3e2536&lang=pug&\"\nimport script from \"./api.vue?vue&type=script&lang=js&\"\nexport * from \"./api.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}