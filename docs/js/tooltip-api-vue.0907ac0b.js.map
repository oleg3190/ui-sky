{"version":3,"sources":["webpack://WaveUI/./src/documentation/views/ui-components/tooltip/api.vue?bedf","webpack://WaveUI/src/documentation/views/ui-components/tooltip/api.vue","webpack://WaveUI/./src/documentation/views/ui-components/tooltip/api.vue?2a94","webpack://WaveUI/./src/documentation/views/ui-components/tooltip/api.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","props","propsDescs","slots","events","staticRenderFns","value","showOnClick","color","bgColor","shadow","noBorder","transition","tile","round","tooltipClass","detachTo","fixed","top","bottom","left","right","zIndex","activator","default","data","computed","component"],"mappings":"sIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,KAAK,CAACP,EAAIQ,GAAG,SAASJ,EAAG,gBAAgB,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIS,MAAM,aAAeT,EAAIU,WAAW,MAAQ,WAAWN,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIW,MAAM,MAAQ,WAAWP,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIY,OAAO,MAAQ,aAAa,IAC1cC,EAAkB,G,wBCctB,GACEC,MAAO,sMACPC,YAAa,wIACbC,MAAO,6QACPC,QAAS,mRACTC,OAAQ,wCACRC,SAAU,uDACVC,WAAY,wQACZC,KAAM,yEACNC,MAAO,sFACPC,aAAc,qDAEdC,SAAU,4TACVC,MAAO,oFACPC,IAAK,wIACLC,OAAQ,8IACRC,KAAM,0IACNC,MAAO,4IACPC,OAAQ,oEAGV,GACEC,UAAW,CAAb,iNACEC,QAAS,CAAX,qCAGA,KAKA,GACEC,KAAM,WAAR,OACA,aACA,UAGEC,SAAU,CAGRzB,MAHJ,WAIM,OAAO,EAAb,YAEIG,OANJ,WAOM,OAAO,EAAb,iFC3D0X,I,YCOtXuB,EAAY,eACd,EACApC,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAAsB,E","file":"js/tooltip-api-vue.0907ac0b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\"}},[_vm._v(\"API\")]),_c('component-api',{staticClass:\"mt0\",attrs:{\"items\":_vm.props,\"descriptions\":_vm.propsDescs,\"title\":\"Props\"}}),_c('component-api',{attrs:{\"items\":_vm.slots,\"title\":\"Slots\"}}),_c('component-api',{attrs:{\"items\":_vm.events,\"title\":\"Events\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\r\ndiv\r\n  .w-divider.my12\r\n  title-link.title1(h2) API\r\n\r\n  component-api.mt0(:items=\"props\" :descriptions=\"propsDescs\" title=\"Props\")\r\n\r\n  component-api(:items=\"slots\" title=\"Slots\")\r\n\r\n  component-api(:items=\"events\" title=\"Events\")\r\n</template>\r\n\r\n<script>\r\nimport WTooltip from '@/wave-ui/components/w-tooltip'\r\n\r\nconst propsDescs = {\r\n  value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>This prop controls the visibility of the tooltip. Any truthy value will show the tooltip whereas any falsy value will hide it.',\r\n  showOnClick: 'Triggers the tooltip apparition on activator click instead of hover by default. Another click on the activator will hide the tooltip.',\r\n  color: 'Applies a color to the tooltip\\'s text. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\r\n  bgColor: 'Applies a color to the tooltip\\'s background. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\r\n  shadow: 'Applies a drop shadow to the tooltip.',\r\n  noBorder: 'Removes the default border from the tooltip element.',\r\n  transition: 'Applies a particular transition to the tooltip element when showing and hiding.<br>Accepts all the transitions listed in the <a href=\"/transitions\">transitions</a> knowledge base page. You can also disable the transition by setting this prop to an empty string.',\r\n  tile: 'Removes the default border-radius and sets sharp edges on the tooltip.',\r\n  round: 'Sets a maximum border-radius on the corners of the tooltip, giving it a round look.',\r\n  tooltipClass: 'Applies a custom CSS class to the tooltip element.',\r\n  // Position.\r\n  detachTo: 'Moves the tooltip element into another DOM element.<br>Accepts a valid query selector string. If the string is invalid, or the node is not found or if <code>true</code> is provided, `.w-app` will be the target.<br>By default a wrapper is created around the activator element and the tooltip is appended inside it.',\r\n  fixed: 'Sets the CSS position of the tooltip to <code>fixed</code> (absolute by default).',\r\n  top: 'Places the tooltip at the top of the screen when the <code>fixed</code> prop is set to true or at the top of its container otherwise.',\r\n  bottom: 'Places the tooltip at the bottom of the screen when the <code>fixed</code> prop is set to true or at the bottom of its container otherwise.',\r\n  left: 'Places the tooltip at the left of the screen when the <code>fixed</code> prop is set to true or at the left of its container otherwise.',\r\n  right: 'Places the tooltip at the right of the screen when the <code>fixed</code> prop is set to true or at the right of its container otherwise.',\r\n  zIndex: 'Applies a z-index (positive or negative integer) to the tooltip.'\r\n}\r\n\r\nconst slots = {\r\n  activator: { description: '<strong>This slot is required and must have the v-on=\"on\" directive set on it for the tooltip to toggle correctly.</strong><br>The activator can be any visible DOM element or mounted component.' },\r\n  default: { description: 'The tooltip content.' }\r\n}\r\n\r\nconst eventsDescs = {\r\n  // input: 'Emitted each time the state of the component changes (when showing or hiding the tooltip).<br>Updates the v-model value in Vue 2.x only.',\r\n  // 'update:modelValue': 'Emitted each time the state of the component changes (when showing or hiding the tooltip).<br>Updates the v-model value in Vue 3 only.'\r\n}\r\n\r\nexport default {\r\n  data: () => ({\r\n    propsDescs,\r\n    slots\r\n  }),\r\n\r\n  computed: {\r\n    // Reads all the props and events directly from the component, so that as soon as a new prop or event\r\n    // is added it will appear even if no description is yet provided.\r\n    props () {\r\n      return WTooltip.props\r\n    },\r\n    events () {\r\n      return WTooltip.emits.reduce((obj, label) => (obj[label] = { description: eventsDescs[label] || '' }) && obj, {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api.vue?vue&type=template&id=4d28da0c&lang=pug&\"\nimport script from \"./api.vue?vue&type=script&lang=js&\"\nexport * from \"./api.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}