{"version":3,"sources":["webpack://WaveUI/./src/documentation/views/ui-components/slider/api.vue?556e","webpack://WaveUI/src/documentation/views/ui-components/slider/api.vue","webpack://WaveUI/./src/documentation/views/ui-components/slider/api.vue?6a85","webpack://WaveUI/./src/documentation/views/ui-components/slider/api.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","props","propsDescs","slots","events","staticRenderFns","value","color","bgColor","stepLabels","thumblabel","thumbLabelClass","trackClass","rangeClass","step","min","max","labelLeft","labelRight","name","disabled","readonly","required","validators","input","description","params","focus","data","computed","component"],"mappings":"mIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,KAAK,CAACP,EAAIQ,GAAG,SAASJ,EAAG,gBAAgB,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIS,MAAM,aAAeT,EAAIU,WAAW,MAAQ,WAAWN,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIW,MAAM,MAAQ,WAAWP,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIY,OAAO,MAAQ,aAAa,IAC1cC,EAAkB,G,wBCctB,GACEC,MAAO,oMACPC,MAAO,+QACPC,QAAS,wRACTC,WAAY,4IACZC,WAAY,uCACZC,gBAAiB,0DACjBC,WAAY,oDACZC,WAAY,gEACZC,KAAM,yGACNC,IAAK,6DACLC,IAAK,6DACLC,UAAW,wDACXC,WAAY,yDACZC,KAAM,oHACNC,SAAU,iEACVC,SAAU,8IACVC,SAAU,yEACVC,WAAY,+aAGd,KAEA,GACEC,MAAO,CACLC,YAAa,4FACbC,OAAQ,CACN,WAAY,qCAGhB,oBAAqB,CACnBD,YAAa,0FACbC,OAAQ,CACN,WAAY,qCAGhBC,MAAO,CACLF,YAAa,yDACbC,OAAQ,CACN,qBAAsB,qCAK5B,GACEE,KAAM,WAAR,OACA,aACA,UAGEC,SAAU,CAGR5B,MAHJ,WAIM,OAAO,EAAb,YAEIG,OANJ,WAOM,OAAO,EAAb,mECxE0X,I,YCOtX0B,EAAY,eACd,EACAvC,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAAyB,E","file":"js/slider-api-vue.c68f2302.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\"}},[_vm._v(\"API\")]),_c('component-api',{staticClass:\"mt0\",attrs:{\"items\":_vm.props,\"descriptions\":_vm.propsDescs,\"title\":\"Props\"}}),_c('component-api',{attrs:{\"items\":_vm.slots,\"title\":\"Slots\"}}),_c('component-api',{attrs:{\"items\":_vm.events,\"title\":\"Events\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\r\ndiv\r\n  .w-divider.my12\r\n  title-link.title1(h2) API\r\n\r\n  component-api.mt0(:items=\"props\" :descriptions=\"propsDescs\" title=\"Props\")\r\n\r\n  component-api(:items=\"slots\" title=\"Slots\")\r\n\r\n  component-api(:items=\"events\" title=\"Events\")\r\n</template>\r\n\r\n<script>\r\nimport WSlider from '@/wave-ui/components/w-slider'\r\n\r\nconst propsDescs = {\r\n  value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>Dictates the range selection of the slider. When the user changes the range, the <code>v-model</code> value will be updated.',\r\n  color: 'Applies a foreground color to the slider. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\r\n  bgColor: 'Applies a background color to the slider\\'s track. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\r\n  stepLabels: 'A Boolean to display or hide the labels of each steps under the slider.<br>A future version will allow passing an array of custom labels.',\r\n  thumblabel: 'Sets a visible label for the slider.',\r\n  thumbLabelClass: 'Applies a custom CSS class to the slider\\'s thumb label.',\r\n  trackClass: 'Applies a custom CSS class to the slider\\'s track.',\r\n  rangeClass: 'Applies a custom CSS class to the slider\\'s highlighted range.',\r\n  step: 'Sets an incremental/decremental integer or floating step number for the slider, e.g. <code>0.3</code>.',\r\n  min: 'Sets an integer or floating minimum number for the slider.',\r\n  max: 'Sets an integer or floating maximum number for the slider.',\r\n  labelLeft: 'Defines a label to display on the left of the slider.',\r\n  labelRight: 'Defines a label to display on the right of the slider.',\r\n  name: 'Provide a native HTML <code>name</code> attribute to the slider. If not provided, a unique name will be computed.',\r\n  disabled: 'Disables the slider making it unreactive to user interactions.',\r\n  readonly: 'The slider will still look like an interactive slider except that it is read-only: its current value cannot be changed by user interaction.',\r\n  required: 'Applies the native HTML <code>required</code> attribute to the slider.',\r\n  validators: '<span class=\"deep-orange\">Only for validation, when the slider is wrapped into a <strong class=\"code\">w-form</strong></span>.<br>An array of functions determining the validity of the slider. Each function will be executed on slider validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the slider.'\r\n}\r\n\r\nconst slots = {}\r\n\r\nconst events = {\r\n  input: {\r\n    description: 'Emitted each time the slider range changes.<br>Updates the v-model value in Vue 2.x only.',\r\n    params: {\r\n      '[Number]': 'The current value of the slider.'\r\n    }\r\n  },\r\n  'update:modelValue': {\r\n    description: 'Emitted each time the slider range changes.<br>Updates the v-model value in Vue 3 only.',\r\n    params: {\r\n      '[Number]': 'The current value of the slider.'\r\n    }\r\n  },\r\n  focus: {\r\n    description: 'Emitted when the slider is focused (the thumb button).',\r\n    params: {\r\n      '[DOM event object]': 'The associated focus DOM event.'\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  data: () => ({\r\n    propsDescs,\r\n    slots\r\n  }),\r\n\r\n  computed: {\r\n    // Reads all the props and events directly from the component, so that as soon as a new prop or event\r\n    // is added it will appear even if no description is yet provided.\r\n    props () {\r\n      return WSlider.props\r\n    },\r\n    events () {\r\n      return WSlider.emits.reduce((obj, label) => (obj[label] = events[label] || {}) && obj, {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api.vue?vue&type=template&id=349563f7&lang=pug&\"\nimport script from \"./api.vue?vue&type=script&lang=js&\"\nexport * from \"./api.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}